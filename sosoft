if not game:IsLoaded() then repeat game.Loaded:Wait(0.1) until game:IsLoaded() end
repeat task.wait(0.1) until game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer:FindFirstChild("PlayerGui") and game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main")
loadstring(game:HttpGet("https://api.genhubs.com/v2/loadscript_log/?script_key=Vcfm0uDBvASKzIfoexHgsMXYLvdEi3Vz", true))()
getgenv().AutoRandomSurprise = true
getgenv().DitBF = {
    ["Performance"] = {
        ["Hide Map"] = false,
        ["Black Screen"] = true,
        ["Lock FPS"] = 60,
    },
    ["Fast Attack Duration/Cooldown"] = {3, 6},
    ["Raid if Maxed Blox Fruit"] = true,
    ["Farm boss drops while not maxed"] = false,
    ["Farm Blox Fruit Mastery if maxed"] = true,
    ["Farm method after maxed"] = "Raid Boss Farm - Cake Prince Farm",
    ["Extra time Farm until unlock skills"] = true,
    ["Hop Server"] = {
        ["Type"] = {
            ["[Main] Server Hop"] = false,
            ["[Farm] Server Hop if Player nearby"] = false,
            ["[Sea 3 Quest] Server Hop for 1M+ Blox Fruit"] = false,
        },
        ["Delay"] = 0,
    },
    ["Do Action"] = {
        ["Get Godhuman"] = true,
        ["Get Rengoku"] = false,
        ["Get True Triple Katana"] = false,
        ["Get Hallow Scythe"] = false,
        ["Get Cursed Dual Katana"] = true,
        ["Get Soul Guitar"] = false,
        ["Awake Current Blox Fruit"] = false,
        ["Get Mirror Fractal"] = true,
    },
    ["Buy Haki"] = {
        ["Enhancement"] = true,
        ["Skyjump"] = true,
        ["Flash Step"] = true,
        ["Observation"] = true,
        ["Legendary Enhancement"] = true,
    },
    ["Auto Race"] = "None",
    ["Blox Fruit Sniper"] = {"Flame-Flame","Ice-Ice","Sand-Sand","Dark-Dark","Light-Light","Magma-Magma","Buddha-Buddha",},
    ["Main Blox Fruit"] = {"Dough-Dough"},
    ["Eat Sniper Blox Fruits"] = true,
    },
}
getgenv().ForceTeam = "Pirates"
getgenv().Key = "k6635e3ca0a52bd6bb49950f"
loadstring(game:HttpGet("https://ditbloxfruit.cc/client.lua"))()
local EnvHook = {
    {
        ["OldMethod"] = nil,
        ["Function"] = getgenv().spawn
    },
    {
        ["OldMethod"] = nil,
        ["Function"] = getrenv().spawn
    },
    {
        ["OldMethod"] = nil,
        ["Function"] = getgenv().task.spawn
    },
    {
        ["OldMethod"] = nil,
        ["Function"] = getrenv().task.spawn,
    },
    {
        ["OldMethod"] = nil,
        ["Function"] = task.spawn,
    },
    {
        ["OldMethod"] = nil,
        ["Function"] = spawn
    }
}

for i, v in pairs(EnvHook) do 
    v["OldMethod"] = hookfunction(v["Function"], newcclosure(function(self, ...)
        local args = {...} 
        if string.find(string.lower(getnamecallmethod()), "spawn") then 
            local co = coroutine.create(args[0])
            coroutine.resume(co)
        end
        return v["OldMethod"](self, ...)
    end))
end

